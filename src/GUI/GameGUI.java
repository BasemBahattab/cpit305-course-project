/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import org.w3c.dom.css.Counter;

/**
 *
 * @author Basem
 */
public class GameGUI extends javax.swing.JFrame {

    int player = 1;
    int counter = 0;
    public char[][] gameboard = new char[3][3];

    /**
     * Creates new form GameGUI
     */
    public GameGUI() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        _3x1Button = new java.awt.Button();
        _1x3Button = new java.awt.Button();
        _1x2Button = new java.awt.Button();
        _1x1Button = new java.awt.Button();
        _2x1Button = new java.awt.Button();
        _2x2Button = new java.awt.Button();
        _2x3Button = new java.awt.Button();
        _3x3Button = new java.awt.Button();
        _3x2Button = new java.awt.Button();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(605, 830));
        setResizable(false);
        getContentPane().setLayout(null);

        _3x1Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _3x1ButtonActionPerformed(evt);
            }
        });
        getContentPane().add(_3x1Button);
        _3x1Button.setBounds(40, 640, 140, 100);

        _1x3Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _1x3ButtonActionPerformed(evt);
            }
        });
        getContentPane().add(_1x3Button);
        _1x3Button.setBounds(440, 290, 140, 100);

        _1x2Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _1x2ButtonActionPerformed(evt);
            }
        });
        getContentPane().add(_1x2Button);
        _1x2Button.setBounds(240, 290, 140, 100);

        _1x1Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _1x1ButtonActionPerformed(evt);
            }
        });
        getContentPane().add(_1x1Button);
        _1x1Button.setBounds(50, 290, 140, 100);

        _2x1Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _2x1ButtonActionPerformed(evt);
            }
        });
        getContentPane().add(_2x1Button);
        _2x1Button.setBounds(40, 460, 140, 100);

        _2x2Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _2x2ButtonActionPerformed(evt);
            }
        });
        getContentPane().add(_2x2Button);
        _2x2Button.setBounds(240, 460, 140, 100);

        _2x3Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _2x3ButtonActionPerformed(evt);
            }
        });
        getContentPane().add(_2x3Button);
        _2x3Button.setBounds(440, 470, 140, 100);

        _3x3Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _3x3ButtonActionPerformed(evt);
            }
        });
        getContentPane().add(_3x3Button);
        _3x3Button.setBounds(430, 650, 140, 100);

        _3x2Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _3x2ButtonActionPerformed(evt);
            }
        });
        getContentPane().add(_3x2Button);
        _3x2Button.setBounds(240, 640, 140, 100);
        getContentPane().add(jLabel1);
        jLabel1.setBounds(80, 280, 120, 100);
        getContentPane().add(jLabel2);
        jLabel2.setBounds(250, 270, 120, 120);

        jLabel3.setToolTipText("");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(450, 270, 120, 120);
        getContentPane().add(jLabel4);
        jLabel4.setBounds(60, 460, 120, 120);
        getContentPane().add(jLabel5);
        jLabel5.setBounds(250, 450, 120, 120);
        getContentPane().add(jLabel6);
        jLabel6.setBounds(450, 460, 120, 120);
        getContentPane().add(jLabel7);
        jLabel7.setBounds(60, 640, 120, 120);
        getContentPane().add(jLabel8);
        jLabel8.setBounds(250, 630, 120, 120);
        getContentPane().add(jLabel9);
        jLabel9.setBounds(440, 640, 120, 120);

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/Game board.jpg"))); // NOI18N
        getContentPane().add(jLabel10);
        jLabel10.setBounds(0, 0, 600, 800);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents


    private void _1x1ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__1x1ButtonActionPerformed
        _1x1Button.hide();

        if (jLabel1.getIcon() == null && player == 1) {
            jLabel1.setIcon(new ImageIcon(this.getClass().getResource("/GUI/x.png")));
            player = 2;
            gameboard[0][0] = 'X';
            counter++;
        } else if (jLabel1.getIcon() == null && player == 2) {
            jLabel1.setIcon(new ImageIcon(this.getClass().getResource("/GUI/o.png")));
            player = 1;
            gameboard[0][0] = 'O';
            counter++;
        } else {
            jLabel1.setIcon(null);
        }
        if (winner(gameboard) == true) {
            JOptionPane.showMessageDialog(this, "Thank you for Playing!");
            System.exit(0);
        } else if (counter == 9) {
            System.out.println("It's a Tie!");
            JOptionPane.showMessageDialog(this, "It's a Tie!\nThank you for Playing!");
            System.exit(0);
        }
    }//GEN-LAST:event__1x1ButtonActionPerformed

    private void _1x2ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__1x2ButtonActionPerformed
        _1x2Button.hide();

        if (jLabel2.getIcon() == null && player == 1) {
            jLabel2.setIcon(new ImageIcon(this.getClass().getResource("/GUI/x.png")));
            player = 2;
            gameboard[0][1] = 'X';
            counter++;
        } else if (jLabel2.getIcon() == null && player == 2) {
            jLabel2.setIcon(new ImageIcon(this.getClass().getResource("/GUI/o.png")));
            player = 1;
            gameboard[0][1] = 'O';
            counter++;
        } else {
            jLabel2.setIcon(null);
        }
        if (winner(gameboard) == true) {
            JOptionPane.showMessageDialog(this, "Thank you for Playing!");
            System.exit(0);
        } else if (counter == 9) {
            System.out.println("It's a Tie!");
            JOptionPane.showMessageDialog(this, "It's a Tie!\nThank you for Playing!");
            System.exit(0);
        }
    }//GEN-LAST:event__1x2ButtonActionPerformed

    private void _1x3ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__1x3ButtonActionPerformed
        _1x3Button.hide();

        if (jLabel3.getIcon() == null && player == 1) {
            jLabel3.setIcon(new ImageIcon(this.getClass().getResource("/GUI/x.png")));
            player = 2;
            gameboard[0][2] = 'X';
            counter++;
        } else if (jLabel3.getIcon() == null && player == 2) {
            jLabel3.setIcon(new ImageIcon(this.getClass().getResource("/GUI/o.png")));
            player = 1;
            gameboard[0][2] = 'O';
            counter++;
        } else {
            jLabel3.setIcon(null);
        }
        if (winner(gameboard) == true) {
            JOptionPane.showMessageDialog(this, "Thank you for Playing!");
            System.exit(0);
        } else if (counter == 9) {
            System.out.println("It's a Tie!");
            JOptionPane.showMessageDialog(this, "It's a Tie!\nThank you for Playing!");
            System.exit(0);
        }
    }//GEN-LAST:event__1x3ButtonActionPerformed

    private void _2x1ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__2x1ButtonActionPerformed
        _2x1Button.hide();
        if (jLabel4.getIcon() == null && player == 1) {
            jLabel4.setIcon(new ImageIcon(this.getClass().getResource("/GUI/x.png")));
            player = 2;
            gameboard[1][0] = 'X';
            counter++;
        } else if (jLabel4.getIcon() == null && player == 2) {
            jLabel4.setIcon(new ImageIcon(this.getClass().getResource("/GUI/o.png")));
            player = 1;
            gameboard[1][0] = 'O';
            counter++;
        } else {
            jLabel4.setIcon(null);
        }
        if (winner(gameboard) == true) {
            JOptionPane.showMessageDialog(this, "Thank you for Playing!");
            System.exit(0);
        } else if (counter == 9) {
            System.out.println("It's a Tie!");
            JOptionPane.showMessageDialog(this, "It's a Tie!\nThank you for Playing!");
            System.exit(0);
        }
    }//GEN-LAST:event__2x1ButtonActionPerformed

    private void _2x2ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__2x2ButtonActionPerformed
        _2x2Button.hide();
        if (jLabel5.getIcon() == null && player == 1) {
            jLabel5.setIcon(new ImageIcon(this.getClass().getResource("/GUI/x.png")));
            player = 2;
            gameboard[1][1] = 'X';
            counter++;
        } else if (jLabel5.getIcon() == null && player == 2) {
            jLabel5.setIcon(new ImageIcon(this.getClass().getResource("/GUI/o.png")));
            player = 1;
            gameboard[1][1] = 'O';
            counter++;
        } else {
            jLabel5.setIcon(null);
        }
        if (winner(gameboard) == true) {
            JOptionPane.showMessageDialog(this, "Thank you for Playing!");
            System.exit(0);
        } else if (counter == 9) {
            System.out.println("It's a Tie!");
            JOptionPane.showMessageDialog(this, "It's a Tie!\nThank you for Playing!");
            System.exit(0);
        }
    }//GEN-LAST:event__2x2ButtonActionPerformed

    private void _2x3ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__2x3ButtonActionPerformed
        _2x3Button.hide();
        if (jLabel6.getIcon() == null && player == 1) {
            jLabel6.setIcon(new ImageIcon(this.getClass().getResource("/GUI/x.png")));
            player = 2;
            gameboard[1][2] = 'X';
            counter++;
        } else if (jLabel6.getIcon() == null && player == 2) {
            jLabel6.setIcon(new ImageIcon(this.getClass().getResource("/GUI/o.png")));
            player = 1;
            gameboard[1][2] = 'O';
            counter++;
        } else {
            jLabel6.setIcon(null);
        }
        if (winner(gameboard) == true) {
            JOptionPane.showMessageDialog(this, "Thank you for Playing!");
            System.exit(0);
        } else if (counter == 9) {
            System.out.println("It's a Tie!");
            JOptionPane.showMessageDialog(this, "It's a Tie!\nThank you for Playing!");
            System.exit(0);
        }
    }//GEN-LAST:event__2x3ButtonActionPerformed

    private void _3x1ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__3x1ButtonActionPerformed
        _3x1Button.hide();
        if (jLabel7.getIcon() == null && player == 1) {
            jLabel7.setIcon(new ImageIcon(this.getClass().getResource("/GUI/x.png")));
            player = 2;
            gameboard[2][0] = 'X';
            counter++;
        } else if (jLabel7.getIcon() == null && player == 2) {
            jLabel7.setIcon(new ImageIcon(this.getClass().getResource("/GUI/o.png")));
            player = 1;
            gameboard[2][0] = 'O';
            counter++;
        } else {
            jLabel7.setIcon(null);
        }
        if (winner(gameboard) == true) {
            JOptionPane.showMessageDialog(this, "Thank you for Playing!");
            System.exit(0);
        } else if (counter == 9) {
            System.out.println("It's a Tie!");
            JOptionPane.showMessageDialog(this, "It's a Tie!\nThank you for Playing!");
            System.exit(0);
        }
    }//GEN-LAST:event__3x1ButtonActionPerformed

    private void _3x2ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__3x2ButtonActionPerformed
        _3x2Button.hide();
        if (jLabel8.getIcon() == null && player == 1) {
            jLabel8.setIcon(new ImageIcon(this.getClass().getResource("/GUI/x.png")));
            player = 2;
            gameboard[2][1] = 'X';
            counter++;
        } else if (jLabel8.getIcon() == null && player == 2) {
            jLabel8.setIcon(new ImageIcon(this.getClass().getResource("/GUI/o.png")));
            player = 1;
            gameboard[2][1] = 'O';
            counter++;
        } else {
            jLabel8.setIcon(null);
        }
        if (winner(gameboard) == true) {
            JOptionPane.showMessageDialog(this, "Thank you for Playing!");
            System.exit(0);
        } else if (counter == 9) {
            System.out.println("It's a Tie!");
            JOptionPane.showMessageDialog(this, "It's a Tie!\nThank you for Playing!");
            System.exit(0);
        }
    }//GEN-LAST:event__3x2ButtonActionPerformed

    private void _3x3ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__3x3ButtonActionPerformed
        _3x3Button.hide();

        if (jLabel9.getIcon() == null && player == 1) {
            jLabel9.setIcon(new ImageIcon(this.getClass().getResource("/GUI/x.png")));
            player = 2;
            gameboard[2][2] = 'X';
            counter++;
        } else if (jLabel9.getIcon() == null && player == 2) {
            jLabel9.setIcon(new ImageIcon(this.getClass().getResource("/GUI/o.png")));
            player = 1;
            gameboard[2][2] = 'O';
            counter++;
        } else {
            jLabel9.setIcon(null);
        }
        if (winner(gameboard) == true) {
            JOptionPane.showMessageDialog(this, "Thank you for Playing!");

            System.exit(0);
        } else if (counter == 9) {
            System.out.println("It's a Tie!");
            JOptionPane.showMessageDialog(this, "It's a Tie!\nThank you for Playing!");
            System.exit(0);
        }
    }//GEN-LAST:event__3x3ButtonActionPerformed

    public static boolean winner(char[][] gameboard) {

        //Horizontal Win
        if (gameboard[0][0] == 'X' && gameboard[0][1] == 'X' && gameboard[0][2] == 'X') {
            System.out.println("Player 1 Wins");
            return true;
        } else if (gameboard[0][0] == 'O' && gameboard[0][1] == 'O' && gameboard[0][2] == 'O') {
            System.out.println("Player 2 Wins");
            return true;
        } else if (gameboard[1][0] == 'X' && gameboard[1][1] == 'X' && gameboard[1][2] == 'X') {
            System.out.println("Player 1 Wins");
            return true;
        } else if (gameboard[1][0] == 'O' && gameboard[1][1] == 'O' && gameboard[1][2] == 'O') {
            System.out.println("Player 2 Wins");
            return true;
        } else if (gameboard[2][0] == 'X' && gameboard[2][1] == 'X' && gameboard[2][2] == 'X') {
            System.out.println("Player 1 Wins");
            return true;
        } else if (gameboard[2][0] == 'O' && gameboard[2][1] == 'O' && gameboard[2][2] == 'O') {
            System.out.println("Player 2 Wins");
            return true;
        } //Vertical Wins
        else if (gameboard[0][0] == 'X' && gameboard[1][0] == 'X' && gameboard[2][0] == 'X') {
            System.out.println("Player 1 Wins");
            return true;
        } else if (gameboard[0][0] == 'O' && gameboard[1][0] == 'O' && gameboard[2][0] == 'O') {
            System.out.println("Player 2 Wins");
            return true;
        } else if (gameboard[0][1] == 'X' && gameboard[1][1] == 'X' && gameboard[2][1] == 'X') {
            System.out.println("Player 1 Wins");
            return true;
        } else if (gameboard[0][1] == 'O' && gameboard[1][1] == 'O' && gameboard[2][1] == 'O') {
            System.out.println("Player 2 Wins");
            return true;
        } else if (gameboard[0][2] == 'X' && gameboard[1][2] == 'X' && gameboard[2][2] == 'X') {
            System.out.println("Player 1 Wins");
            return true;
        } else if (gameboard[0][2] == 'O' && gameboard[1][2] == 'O' && gameboard[2][2] == 'O') {
            System.out.println("Player 2 Wins");
            return true;
        } //Diagonal Wins
        else if (gameboard[0][0] == 'X' && gameboard[1][1] == 'X' && gameboard[2][2] == 'X') {
            System.out.println("Player 1 Wins");
            return true;
        } else if (gameboard[0][0] == 'O' && gameboard[1][1] == 'O' && gameboard[2][2] == 'O') {
            System.out.println("Player 2 Wins");
            return true;
        } else if (gameboard[0][2] == 'X' && gameboard[1][1] == 'X' && gameboard[2][0] == 'X') {
            System.out.println("Player 1 Wins");
            return true;
        } else if (gameboard[0][2] == 'O' && gameboard[1][1] == 'O' && gameboard[2][0] == 'O') {
            System.out.println("Player 2 Wins");

            return true;
        }
        return false;

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */

        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GameGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GameGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GameGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GameGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GameGUI().setVisible(true);

            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Button _1x1Button;
    private java.awt.Button _1x2Button;
    private java.awt.Button _1x3Button;
    private java.awt.Button _2x1Button;
    private java.awt.Button _2x2Button;
    private java.awt.Button _2x3Button;
    private java.awt.Button _3x1Button;
    private java.awt.Button _3x2Button;
    private java.awt.Button _3x3Button;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    // End of variables declaration//GEN-END:variables

}
